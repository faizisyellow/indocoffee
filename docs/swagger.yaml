basePath: /v1
definitions:
  dto.BeanResponse:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  dto.CartBeanDTO:
    properties:
      name:
        type: string
    type: object
  dto.CartFormDTO:
    properties:
      name:
        type: string
    type: object
  dto.CartItemDetail:
    properties:
      id:
        type: integer
      product:
        $ref: '#/definitions/dto.CartProductDTO'
      quantity:
        type: integer
    type: object
  dto.CartProductDTO:
    properties:
      bean:
        $ref: '#/definitions/dto.CartBeanDTO'
      form:
        $ref: '#/definitions/dto.CartFormDTO'
      image:
        type: string
      price:
        type: number
      roasted:
        type: string
      stock:
        description: (quantity)
        type: integer
    type: object
  dto.CreateBeanRequest:
    properties:
      name:
        maxLength: 18
        minLength: 3
        type: string
    required:
    - name
    type: object
  dto.CreateCartRequest:
    properties:
      product_id:
        type: integer
    type: object
  dto.CreateFormRequest:
    properties:
      name:
        maxLength: 18
        minLength: 4
        type: string
    required:
    - name
    type: object
  dto.CreateRoleRequest:
    properties:
      level:
        maximum: 5
        minimum: 1
        type: integer
      name:
        maxLength: 16
        minLength: 4
        type: string
    required:
    - level
    - name
    type: object
  dto.FormResponse:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  dto.GetProductResponse:
    properties:
      bean:
        properties:
          name:
            type: string
        type: object
      bean_id:
        type: integer
      form:
        properties:
          name:
            type: string
        type: object
      form_id:
        type: integer
      id:
        type: integer
      image:
        type: string
      price:
        type: number
      quantity:
        type: integer
      roasted:
        type: string
    type: object
  dto.GetProductsResponse:
    properties:
      bean:
        properties:
          name:
            type: string
        type: object
      bean_id:
        type: integer
      form:
        properties:
          name:
            type: string
        type: object
      form_id:
        type: integer
      id:
        type: integer
      image:
        type: string
      price:
        type: number
      quantity:
        type: integer
      roasted:
        type: string
    type: object
  dto.GetUsersCartResponse:
    properties:
      carts:
        items:
          $ref: '#/definitions/dto.CartItemDetail'
        type: array
      id:
        type: integer
      total_price:
        type: number
      username:
        type: string
    type: object
  dto.GetUsersProfileResponse:
    properties:
      created_at:
        type: string
      email:
        type: string
      int:
        type: integer
      is_active:
        type: boolean
      username:
        type: string
    type: object
  dto.RolesResponse:
    properties:
      id:
        type: integer
      level:
        type: integer
      name:
        type: string
    type: object
  dto.UpdateBeanRequest:
    properties:
      name:
        maxLength: 18
        minLength: 3
        type: string
    required:
    - name
    type: object
  dto.UpdateFormRequest:
    properties:
      name:
        maxLength: 18
        minLength: 4
        type: string
    required:
    - name
    type: object
  dto.UpdateRoleRequest:
    properties:
      level:
        maximum: 5
        minimum: 1
        type: integer
      name:
        maxLength: 16
        minLength: 4
        type: string
    type: object
  main.Envelope:
    properties:
      data: {}
      error: {}
    type: object
  main.LoginResponse:
    properties:
      token:
        type: string
    type: object
  service.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  service.RegisterRequest:
    properties:
      email:
        maxLength: 32
        minLength: 6
        type: string
      password:
        maxLength: 18
        type: string
      username:
        maxLength: 16
        minLength: 3
        type: string
    required:
    - email
    - password
    - username
    type: object
  service.RegisterResponse:
    properties:
      token:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Rest API Documentation.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Indocoffee REST APIs service
  version: "1.0"
paths:
  /authentication/activation/{token}:
    post:
      consumes:
      - application/json
      description: Activate  New Account
      parameters:
      - description: Token Inivitation to Activate Account
        in: path
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: string
                error:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
      summary: Activate Account
      tags:
      - Auth
  /authentication/sign-in:
    post:
      consumes:
      - application/json
      description: Sign in  New Account
      parameters:
      - description: Token to Sign in Account
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/service.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  $ref: '#/definitions/main.LoginResponse'
                error:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
      summary: Sign in Account
      tags:
      - Auth
  /authentication/sign-up:
    post:
      consumes:
      - application/json
      description: Sign Up New Account
      parameters:
      - description: Payload to Sign Up
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/service.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  $ref: '#/definitions/service.RegisterResponse'
                error:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "409":
          description: Conflict
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
      summary: Sign Up Account
      tags:
      - Auth
  /beans:
    get:
      description: Get All coffee beans
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.BeanResponse'
                  type: array
                error:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
      summary: Get coffee beans
      tags:
      - Beans
    post:
      consumes:
      - application/json
      description: Create new coffee bean
      parameters:
      - description: Payload create new bean
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dto.CreateBeanRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: string
                error:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "409":
          description: Conflict
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
      summary: Add Coffee bean
      tags:
      - Beans
  /beans/{id}:
    delete:
      consumes:
      - application/json
      description: Delete coffee bean by ID
      parameters:
      - description: Id coffee bean
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
      summary: Delete coffee bean
      tags:
      - Beans
    get:
      description: Get coffee bean by ID
      parameters:
      - description: Id coffee bean
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  $ref: '#/definitions/dto.BeanResponse'
                error:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
      summary: Get coffee bean
      tags:
      - Beans
    patch:
      consumes:
      - application/json
      description: Update coffee bean by ID
      parameters:
      - description: Id coffee bean
        in: path
        name: id
        required: true
        type: integer
      - description: Payload Update bean
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateBeanRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: string
                error:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "409":
          description: Conflict
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
      summary: Update coffee bean
      tags:
      - Beans
  /beans/trash:
    delete:
      description: Delete all coffee's beans permanently
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
      summary: Delete coffee's beans
      tags:
      - Beans
  /carts:
    post:
      consumes:
      - application/json
      description: Add new cart
      parameters:
      - description: Payload create new cart
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dto.CreateCartRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: string
                error:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "409":
          description: Conflict
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
      security:
      - JWT: []
      summary: Add cart
      tags:
      - Carts
  /carts/{id}:
    delete:
      consumes:
      - application/json
      description: Delete cart by id
      parameters:
      - description: cart id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
      security:
      - JWT: []
      summary: Delete cart
      tags:
      - Carts
  /carts/{id}/decrement:
    patch:
      consumes:
      - application/json
      description: Decrement quantity
      parameters:
      - description: cart id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: string
                error:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
      security:
      - JWT: []
      summary: Decrement cart
      tags:
      - Carts
  /carts/{id}/increment:
    patch:
      consumes:
      - application/json
      description: Increment quantity
      parameters:
      - description: cart id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: string
                error:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
      security:
      - JWT: []
      summary: Increment cart
      tags:
      - Carts
  /forms:
    get:
      description: Get all coffee's form
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.FormResponse'
                  type: array
                error:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
      summary: Get coffee's form
      tags:
      - Forms
    post:
      consumes:
      - application/json
      description: Create new coffee's form
      parameters:
      - description: Form body payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dto.CreateFormRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: string
                error:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "409":
          description: Conflict
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
      summary: Create coffee's form
      tags:
      - Forms
  /forms/{id}:
    delete:
      consumes:
      - application/json
      description: Delete coffee's form by id
      parameters:
      - description: Form id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
      summary: Delete coffee's form
      tags:
      - Forms
    get:
      description: Get coffee's form by id
      parameters:
      - description: Form id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  $ref: '#/definitions/dto.FormResponse'
                error:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
      summary: Get coffee's form
      tags:
      - Forms
    patch:
      consumes:
      - application/json
      description: Update coffee's form by id
      parameters:
      - description: Form id
        in: path
        name: id
        required: true
        type: integer
      - description: Form body payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateFormRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: string
                error:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "409":
          description: Conflict
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
      summary: Update coffee's form
      tags:
      - Forms
  /forms/trash:
    delete:
      description: Delete all coffee's forms permanently
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
      summary: Delete coffee's forms
      tags:
      - Forms
  /products:
    get:
      consumes:
      - application/json
      description: Get all coffee  products
      parameters:
      - description: limit each page
        in: query
        name: limit
        type: string
      - description: skip rows
        in: query
        name: offset
        type: string
      - description: sort product by alphabet
        in: query
        name: sort
        type: string
      - description: roasted coffee
        in: query
        name: roast
        type: string
      - description: what kind of form of the coffee (form id)
        in: query
        name: form
        type: string
      - description: what kind of bean of the coffee (bean id)
        in: query
        name: bean
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.GetProductsResponse'
                  type: array
                error:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
      summary: Get products
      tags:
      - Products
    post:
      consumes:
      - multipart/form-data
      description: Create new coffee  product
      parameters:
      - description: Create product JSON string
        example: '{"roasted":"light","price":10.2,"quantity":50,"bean":1,"form":1}'
        in: formData
        name: metadata
        required: true
        type: string
      - description: Image file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: string
                error:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "409":
          description: Conflict
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
      summary: Add new product
      tags:
      - Products
  /products/{id}:
    delete:
      consumes:
      - application/json
      description: Delete product by id
      parameters:
      - description: Product id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
      summary: Delete product
      tags:
      - Products
    get:
      consumes:
      - application/json
      description: Get coffee  product by id
      parameters:
      - description: product id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  $ref: '#/definitions/dto.GetProductResponse'
                error:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
      summary: Get product
      tags:
      - Products
    patch:
      consumes:
      - multipart/form-data
      description: Update spesific product
      parameters:
      - description: Update product JSON string
        example: '{"roasted":"medium","quantity":50}'
        in: formData
        name: metadata
        required: true
        type: string
      - description: Image file
        in: formData
        name: file
        type: file
      - description: Product id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: string
                error:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "409":
          description: Conflict
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
      summary: Edit product
      tags:
      - Products
  /roles:
    get:
      description: Get All user roles
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.RolesResponse'
                  type: array
                error:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
      summary: Get user roles
      tags:
      - Roles
    post:
      consumes:
      - application/json
      description: Create new user role
      parameters:
      - description: Payload create new role
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dto.CreateRoleRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: string
                error:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "409":
          description: Conflict
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
      summary: Add user role
      tags:
      - Roles
  /roles/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user role by Id
      parameters:
      - description: Role id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
      summary: Delete user role
      tags:
      - Roles
    get:
      consumes:
      - application/json
      description: Get user role by Id
      parameters:
      - description: Role id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  $ref: '#/definitions/dto.RolesResponse'
                error:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
      summary: Get user role
      tags:
      - Roles
    patch:
      consumes:
      - application/json
      description: Update user role by Id
      parameters:
      - description: Role id
        in: path
        name: id
        required: true
        type: integer
      - description: Role payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: string
                error:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "409":
          description: Conflict
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
      summary: Update user role
      tags:
      - Roles
  /roles/trash:
    delete:
      description: Delete all user roles permanently
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
      summary: Delete user roles
      tags:
      - Roles
  /users/cart:
    get:
      consumes:
      - application/json
      description: Get User's cart
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  $ref: '#/definitions/dto.GetUsersCartResponse'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
      security:
      - JWT: []
      summary: Get User's cart
      tags:
      - Users
  /users/delete:
    delete:
      consumes:
      - application/json
      description: Delete User Account
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
      security:
      - JWT: []
      summary: Delete User Account
      tags:
      - Users
  /users/profile:
    get:
      consumes:
      - application/json
      description: Get User Profile Who's log in
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  $ref: '#/definitions/dto.GetUsersProfileResponse'
                error:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/main.Envelope'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
      security:
      - JWT: []
      summary: Get User Profile
      tags:
      - Users
schemes:
- http
- https
securityDefinitions:
  JWT:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
